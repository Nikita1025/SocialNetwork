{"version":3,"file":"static/js/841.b36231c9.chunk.js","mappings":"gMACA,G,QAA8B,oCAA9B,EAAyE,6B,yECInEA,EAAc,SAACC,GACjB,IAAMC,EAAYD,EAAME,KAAKC,SAAWH,EAAME,KAAKE,MACnD,OACI,iBAAKC,UAAWC,EAAgB,KAAOL,EAAYK,EAAU,IAAI,WAC7D,yBACKN,EAAMO,WAEVN,IAAa,0BAAOD,EAAME,KAAKE,UAG5C,EAEaI,EAAQ,SAACR,GAClB,IAAOS,EAAoCT,EAApCS,MAAuBC,GAAaV,EAA7BE,KAA6BF,EAAvBW,OAAmB,OAAIX,EAAK,IAChD,OAAO,SAACD,GAAW,kBAAKC,GAAK,cACzB,SAACY,EAAA,GAAS,gBAACC,MAAO,CAACC,SAAU,SAAUC,GAAG,iBAAiBC,MAAM,WAAWC,QAAQ,YAAeR,GAAWC,MAEtH,EAEaQ,EAAW,SAAClB,GACrB,IAAOS,EAAoCT,EAApCS,MAAuBC,GAAaV,EAA7BE,KAA6BF,EAAvBW,OAAmB,OAAIX,EAAK,IAChD,OAAO,SAACD,GAAW,kBAAKC,GAAK,cACzB,SAACY,EAAA,GAAS,gBAACC,MAAO,CAACC,SAAU,SAAUC,GAAG,iBAAiBC,MAAM,cAAcC,QAAQ,YAAeR,GAAWC,MAEzH,C,+EC5BA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,WAAa,4BAA4B,iBAAmB,kCAAkC,WAAa,4BAA4B,QAAU,yBAAyB,OAAS,yB,mBCSxUS,EAAc,SAACnB,GAExB,OAAQ,gBAAKK,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UAC9C,UAAC,KAAO,CAACD,UAAWC,EAAAA,QAAYc,GAAI,aAAepB,EAAMe,GAAG,WACxD,gBAAKV,UAAWC,EAAAA,OAAUe,IAAKrB,EAAMsB,OAAQC,IAAK,WACjDvB,EAAMwB,SAER,ECREC,EAAU,SAACzB,GACpB,OAAO,iBAAKK,UAAWC,EAAAA,iBAAmB,WACtC,gBAAKD,UAAWC,EAAAA,OAAUe,IAAKrB,EAAMsB,OAAQC,IAAK,YAClD,gBAAKlB,UAAWC,EAAAA,WAAa,UACzB,0BAAON,EAAM0B,cAGzB,E,2DCNMC,GAAaC,EAAAA,EAAAA,GAAiB,IAevBC,GAAsBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,wBAA/BD,EAdsC,SAAC9B,GACtE,OACI,kBAAMK,UAAWC,EAAAA,WAAc0B,SAAUhC,EAAMiC,aAAa,WACxD,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWjB,EAAAA,GACXkB,SAAY,CAACC,EAAAA,EAAUV,GACvBH,KAAM,iBAAkBc,YAAY,0BAE/C,0BACI,SAACC,EAAA,EAAM,CAACtB,QAAQ,YAAYuB,KAAK,SAAS3B,MAAO,CAAC4B,WAAW,QAAU,sBAIvF,I,6BCOA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACC,GACnB,MAAO,CACHC,aAAcD,EAAME,aACpBC,OAAQH,EAAMI,KAAKD,OAE3B,IACyB,SAACE,GACtB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,IAAcD,GAC3B,EAER,IAEA,ECrBuB,SAACnD,GACpB,IAAK6C,EAA6B7C,EAA7B6C,aAAcK,EAAelD,EAAfkD,YACfG,EAAkBR,EAAaS,QAAQC,KAAI,SAACC,GAAC,OAAK,SAACrC,EAAW,CAAYK,KAAMgC,EAAEhC,KAAMT,GAAIyC,EAAEzC,GAAIO,OAAQkC,EAAElC,QAAxCkC,EAAEzC,GAA+C,IAErH0C,EAAkBZ,EAAaa,SAASH,KAAI,SAACI,GAAC,OAAK,SAAClC,EAAO,CAAYC,QAASiC,EAAEjC,QAASX,GAAI4C,EAAE5C,GAAIO,OAAQqC,EAAErC,QAA9CqC,EAAE5C,GAAqD,IAI5H,OAAKf,EAAM+C,QAEP,4BAEI,SAACa,EAAA,EAAG,KACJ,iBAAKvD,UAAWC,EAAAA,QAAU,WAEtB,gBAAKD,UAAWC,EAAAA,aAAe,SAC1B+C,KAEL,iBAAKhD,UAAWC,EAAAA,SAAW,WACvB,gBAAKO,MAAO,CAACgD,MAAO,SAAS,SAAEJ,KAC/B,SAAC5B,EAAmB,CAACG,SAfjB,SAAC8B,GACjBZ,EAAYY,EAAOX,eACvB,cAC0B,SAAC,KAAQ,CAAC/B,GAAI,UAiB5C,G,mEClCA,EAA4B,uBAA5B,EAAwD,gBAAxD,EAA6E,gBAA7E,EAAiG,e,SCoBjG,EAlBY,WACR,OACI,gBAAKf,UAAWC,EAAY,UACxB,gBAAID,UAAWC,EAAK,WAChB,eAAID,UAAWC,EAAK,UAChB,cAAGyD,KAAK,WAAW1D,UAAWC,EAAI,wBAEtC,eAAID,UAAWC,EAAK,UAChB,cAAGyD,KAAK,WAAW1D,UAAWC,EAAI,yBAEtC,eAAID,UAAWC,EAAK,UAChB,cAAGyD,KAAK,SAAS1D,UAAWC,EAAI,yBAMpD,C,8ECpBO,IAAM+B,EAAW,SAAC2B,GACrB,IAAIA,EAEJ,MAAO,mBACX,EACapC,EAAkB,SAACqC,GAAiB,OAAI,SAACD,GAClD,GAAIA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAEnE,CAAC,C","sources":["webpack://samurai-way/./src/components/Comman/FormsControls.module.css?7e6a","components/Comman/FormsControls.tsx","webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Comman/FormMessage.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","webpack://samurai-way/./src/components/Nav/Nav.module.css?1620","components/Nav/Nav.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__5Q0CF\",\"error\":\"FormsControls_error__oBpjX\",\"formSummaryError\":\"FormsControls_formSummaryError__hLFqJ\"};","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nconst FormControl = (props: any) => {\r\n    const showError = props.meta.touched && props.meta.error\r\n    return (\r\n        <div className={s.formControl + ' ' + (showError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {showError && <span>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <TextField style={{minWidth: '550px'}} id=\"standard-basic\" label=\"New post\" variant=\"outlined\" {...input} {...restProps}  />\r\n    </FormControl>\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <TextField style={{minWidth: '550px'}} id=\"standard-basic\" label=\"New message\" variant=\"outlined\" {...input} {...restProps}  />\r\n    </FormControl>\r\n}\r\nexport const CreateField = (placeholder: string | null, name: string, validate: ((value: string) => (undefined | string))[], component: any,props={},text='') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validate}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__f1MMU\",\"dialogsItems\":\"Dialogs_dialogsItems__ZnfV0\",\"active\":\"Dialogs_active__2c96L\",\"dialog\":\"Dialogs_dialog__gRIjm\",\"addContent\":\"Dialogs_addContent__n3kkz\",\"messageContainer\":\"Dialogs_messageContainer__+vwKN\",\"messageBox\":\"Dialogs_messageBox__4AVRz\",\"NavLink\":\"Dialogs_NavLink__lSj0Q\",\"avatar\":\"Dialogs_avatar__+rOlY\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype DialogsItemType = {\r\n    name: string\r\n    id: number\r\n    avatar:string\r\n}\r\nexport const DialogsItem = (props: DialogsItemType) => {\r\n\r\n    return (<div className={s.dialog + ' ' + s.active}>\r\n        <NavLink className={s.NavLink}  to={'/dialogs/6' + props.id}>\r\n            <img className={s.avatar} src={props.avatar} alt={'avatar'}/>\r\n            {props.name}\r\n        </NavLink>\r\n    </div>)}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n    avatar: string\r\n}\r\n\r\nexport const Message = (props: MessageType) => {\r\n    return <div className={s.messageContainer}>\r\n        <img className={s.avatar} src={props.avatar} alt={'avatar'}/>\r\n        <div className={s.messageBox}>\r\n            <span>{props.message}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport s from \"../Dialogs/Dialogs.module.css\";\r\nimport {Input, Textarea} from \"./FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength50= maxLengthCreator(50)\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form className={s.addContent} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate = {[required, maxLength50]}\r\n                       name={'newMessageBody'} placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <Button variant='contained' type='submit' style={{marginLeft:'15px', }}>Send</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../Redux/redux-store\";\r\nimport {MessagesPageType, SandMessageAC} from \"../../Redux/dialogs-reducer\";\r\n\r\nimport {compose, Dispatch} from \"redux\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    MessagesPage: MessagesPageType\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToProps = {\r\n    SandMessage: (newMessageBody:string) => void\r\n}\r\nexport type DialogsType = mapStateToPropsType & mapDispatchToProps\r\nlet mapStateToProps = (state: RootState): mapStateToPropsType => {\r\n    return {\r\n        MessagesPage: state.messagesPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToProps => {\r\n    return {\r\n        SandMessage: (newMessageBody:string) => {\r\n            dispatch(SandMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsType} from \"./DialogsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormRedux, FormDataType} from \"../Comman/FormMessage\";\r\nimport HeaderContainer from \"../Header/HeaderContainer\";\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n    let {MessagesPage, SandMessage} = props\r\n    let dialogsElements = MessagesPage.dialogs.map((d) => <DialogsItem key={d.id} name={d.name} id={d.id} avatar={d.avatar}/>)\r\n\r\n    let messageElements = MessagesPage.messages.map((m) => <Message key={m.id} message={m.message} id={m.id} avatar={m.avatar}/>)\r\n    let addNewMessage = (values: FormDataType) => {\r\n        SandMessage(values.newMessageBody)\r\n    }\r\n    if (!props.isAuth) return <Redirect to={'/Login'}/>\r\n    return (\r\n        <div>\r\n            {/*<HeaderContainer/>*/}\r\n            <Nav/>\r\n            <div className={s.dialogs}>\r\n\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div style={{color: \"white\"}}>{messageElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Nav_container__ngNCO\",\"ul\":\"Nav_ul__W+OFc\",\"li\":\"Nav_li__IEPlJ\",\"a\":\"Nav_a__cntv9\"};","import React from 'react';\r\nimport s from './Nav.module.css';\r\n\r\nconst Nav = () =>{\r\n    return(\r\n        <div className={s.container}>\r\n            <ul className={s.ul}>\r\n                <li className={s.li} >\r\n                    <a href=\"/profile\" className={s.a}>Profile</a>\r\n                </li>\r\n                <li className={s.li}>\r\n                    <a href=\"/dialogs\" className={s.a}>Messages</a>\r\n                </li>\r\n                <li className={s.li} >\r\n                    <a href=\"/users\" className={s.a}>Users</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Nav;","export const required = (value:string)=>{\r\n    if (value) return undefined\r\n\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator =(maxLength: number)=> (value:string)=>{\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}"],"names":["FormControl","props","showError","meta","touched","error","className","s","children","Input","input","restProps","child","TextField","style","minWidth","id","label","variant","Textarea","DialogsItem","to","src","avatar","alt","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Button","type","marginLeft","compose","connect","state","MessagesPage","messagesPage","isAuth","auth","dispatch","SandMessage","newMessageBody","SandMessageAC","dialogsElements","dialogs","map","d","messageElements","messages","m","Nav","color","values","href","value","maxLength","length"],"sourceRoot":""}